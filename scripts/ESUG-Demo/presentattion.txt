framework:Slides3D load.  

class ProgramVsSystem : ASCSlide {
   var code.
   var system.
   var tools.
   var shapeGroup.

   -<void>setupSlideWithPresentationViewController:controller {
        self textManager setTitle:'Architectural Mismatch'.
        self textManager addBullet:'Gap between Program and System' atLevel:0.
       shapeGroup := SCNNode node.
       self setShapeGroup:shapeGroup.
       self rootNode addChildNode:shapeGroup.
       boxer := ASCBoxMaker new.
       boxer setP: ( -8 @ 0.2 ).
       boxer setColor: (NSColor colorWithDeviceRed:105 / 255.0 green:145.0 / 255.0 blue:14.0 / 255.0 alpha:1 ).  
       boxer setPosition: 0@0 .
       boxer setHeight:120. 
       boxer setYHeight:1.5. 
       boxer setPadding:140. 
       code :=  boxer box:'Code' width:160.
       self setCode:code.
       boxer setPadding:20. 

       system := boxer  box:'System' width:160 color:(NSColor blueColor).
       self setSystem:system.

       problem := boxer box:'Problem' width:160 color:(NSColor redColor).

       shapeGroup do addChildNode: #( code, system, problem ) each.
 
   }

   -<int>numberOfSteps {  4. }
 
   -<void>presentStepIndex:<int>index withPresentionViewController:controller {
         index = 0 ifTrue:{ 
            SCNTransaction setAnimationDuration:1.5.
         }.
         index = 1 ifTrue:{
            SCNTransaction begin.
            self textManager addBullet:'FP' atLevel:1.
            self system setXYPosition: -10.0  @ 0.20 .
            SCNTransaction commit.
         }.
         index = 2 ifTrue:{
            SCNTransaction begin.
            self system setXYPosition: -8.0  @ 0.20 .
            SCNTransaction commit.
         }.
         index = 3 ifTrue:{
            SCNTransaction begin.
            self textManager addBullet:'Objective-Smalltalk' atLevel:1.
            self code setXYPosition: -5.5  @ 0.20 .
            SCNTransaction commit.
         }.
   }
}
   

controller := #ASCPresentationViewController{
    #Name : ‘ESUG Demo’.
    #Slides : #(

       #ASCChapterSlide { 
               #text : 'Objective-Smalltalk'
         }  ,

        #ASCBulletSlide{ 
             #title : 'Objective-Smalltalk'.
             #bullets : #( 
                'Embeddable Smalltalk-ish language',
                'Objective-C framework',
                'Generalizes Objects+Messages to Components+Connectors',
                'Enable composition by solving Architectural Mismatch',
             )
        } ,
       #ASCChapterSlide { 
               #text : 'Architectural Mismatch'
         }  ,


        #ASCBulletSlide{ 
             #title : 'Architectural Mismatch'.
             #bullets : #( 
                'Packaging mismatch (Garlan et al)',
                'Interactive programs vs. programming languages',
                'Programs vs. Systems, Computers do not compute',
             )
        } ,
        #ASCBulletSlide{ 
             #title : 'Packaging Mismatch'.
             #bullets : #( 
                'Garlan et al (1995)',
                'Application, Filter, Server',
                'Who has the thread of control?',
                '→ it is more important to be easy to talk to than right',
             )
        } ,
        #ASCBulletSlide{ 
             #title : 'Interactive Programs'.
             #bullets : #( 
                'Programs = Algorithms + Data Structurs + Architecture (Chatty 2007)',
                'y = f(x)    v.   interactive programs',
                'Transformational v. reactive',
                'Temperature Converter Example (Modularity 2016)',
             )
        } ,
       #ASCBulletSlide{ 
             #title : 'Tyranny of Call/Return'.
             #bullets : #( 
                'Feymnan: we name everything just a little wrong',
                'Multiparadigm: procedural, oo and fp!',
                "Guy Steele: it's no longer about completion",
                "Oscar Nierstraß: we were told we could just model the domain",
                "Andrew Black: good OO students antropmorphise the objects",
             )
        } ,

         #ProgramVsSystem { 
              #lightIntensities : #( 0.2 , 0.7 )
              
         }  ,

       #ASCBulletSlide{ 
             #title : 'Architectural Styles'.
             #bullets : #( 
                'Objects and Messages',
                'Pipes and Filters',
                'REST, in-process and HTTP',
             )
        } ,


       #ASCSlideSkinning { 
              #lightIntensities : #( 0.2 , 0.7 )
         }  ,


       #ASCChapterSlide { 
               #text : 'Objective-Smalltalk'
         } 
      )
}
 
   

controller view openInWindow:'Presentation'.  

     